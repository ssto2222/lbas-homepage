"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from pathlib import Path
# ↓ 追加
import os
import environ
from decouple import config
from dj_database_url import parse as dburl


CSRF_TRUSTED_ORIGINS=['https://lbas.onrender.com/']
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if DEBUG:
    try:
        import yaml
        with open(os.path.join(BASE_DIR,'secret','secret.yaml')) as f:
            objs = yaml.safe_load(f)
            for obj in objs['env_variables']:
                os.environ[obj] = objs['env_variables'][obj]
    except:
        print('no yaml files')
    
SECRET_KEY = os.environ['SECRET_KEY']
#stripe設定
STRIPE_SECRET_KEY=os.environ['STRIPE_SECRET_KEY']
STRIPE_PUBLISHED_KEY=os.environ['STRIPE_PUBLISHED_KEY']

ALLOWED_HOSTS = ['*']

AUTH_USER_MODEL = 'mainapp.user'

LOGIN_URL = '/login/'

LOGIN_REDIRECT_URL = '/'

LOGOUT_URL = '/logout/'

LOGOUT_REDIRECT_URL = '/login/'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'mainapp',
    'store',
    'blog',
    'payment',
    'orders',
    'booking',
    
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware', # 追加
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,'templates')
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

default_dburl = "sqlite:///" + str(BASE_DIR / "db.sqlite3")

DATABASES = {
    "default": config("DATABASE_URL", default=default_dburl, cast=dburl),
}
# if os.environ["IS_DEPLOY"]=='DEPLOY':
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.mysql',
#             'NAME': os.environ['DB_NAME'],
#             'USER': os.environ['DB_USER'],
#             'PASSWORD': os.environ['DB_PASSWORD'],
#             'HOST': os.environ['DB_HOST'],
#             'PORT': '3306',
#         }
#     }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True




STATIC_URL = "static/"
# IS_DEPLOY = env('IS_DEPLOY')
# if IS_DEPLOY == "0":
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static'),
]

STATIC_ROOT = os.path.join(BASE_DIR,"staticfiles")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SUPERUSER_NAME = os.environ["SUPERUSER_NAME"]
SUPERUSER_EMAIL = os.environ["SUPERUSER_EMAIL"]
SUPERUSER_PASSWORD = os.environ["SUPERUSER_PASSWORD"]

from django.contrib import messages
MESSAGE_TAGS = {
    messages.ERROR: "rounded-0 alert alert-danger",
    messages.WARNING: "rounded-0 alert alert-warning",
    messages.SUCCESS: "rounded-0 alert alert-success",
    messages.INFO: "rounded-0 alert alert-info",
    messages.DEBUG: "rounded-0 alert alert-secondary",
}        

#---Gmail 送信設定
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']
DEFAULT_FROM_EMAIL = os.environ['EMAIL_HOST_USER']




